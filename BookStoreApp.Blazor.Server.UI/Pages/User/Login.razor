@page "/users/login"
@inject IAuthenticationServices authServices
@inject NavigationManager navManager

<h3>Login</h3>

<div>
    <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText class="form-control" @bind-Value="LoginModel.Email"></InputText>
            <ValidationMessage For="@(() => LoginModel.Email)"></ValidationMessage>
        </div>
          <br />
        <div class="form-group">
            <label for="email">Password</label>
            <InputText class="form-control" type="password" @bind-Value="LoginModel.Password"></InputText>
            <ValidationMessage For="@(() => LoginModel.Password)"></ValidationMessage>
        </div>
          <br />
        <button type="submit" class="btn btn-primary btn-block">Login</button>
    </EditForm>
</div>

@code {
    LoginUserDto LoginModel = new LoginUserDto();
    string message = string.Empty;

    public async Task HandleLogin()
    {
        try
        {
            var response = await authServices.AuthenticateAsync(LoginModel);

            if (response)
            {
                navManager.NavigateTo("/");
            }

            message = "Invalid Credentials, Please try again";
        }
        catch(ApiException e)
        {
            if (e.StatusCode >=200 && e.StatusCode <299)
            {
               
            }
            else
            {
                message = e.Message;
            }
        }
    }
}
